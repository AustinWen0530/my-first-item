


以8位为例
1
11 = 10 ^ 1 * 1+ 10 ^ 0 * 1
123 = 10^2 *1   + 10^1 * 2 + 10^0 * 3
123 = 8^2*1 + 8^1*2 + 3 = 64+16+3 = 83


0 = 0  = 2^0*0
1 = 1  = 2^0 * 1
2 = 10  = 2^1 * 1 + 2^0 * 0


100 = 64 + 32 + 4 = 2^6 + 2^5 + 2^2 = 2^6*1 + 2^5*1 + 2^4*0 + 2^3*0 +2^2*1 + 2^1*0 +2^0*0 = 1100100
2 4 8 16 32 64 128 256 512 1024

1000 = 512 + 256 + 128 + 64 + 32 + 8 = 1111101000



以8位为例
int a = 1;
0000 0001;
int b = 10;
0000 1010;

255 = 1111 1111
1 0000 0000 - 1

在带有符号的整数类型中,第一位代表符号位，0为正，1为负。在负数中，需要对后续的数字进行取补码
1000 0001
1111 1110
1111 1111
同样的所占位数，有符号数的-1和无符号数的最大值，是同样的表示法


-2
1000 0010
1111 1110

-2 + 1 =  -1

1111 1110 + 0000 0001 = 1111 1111


